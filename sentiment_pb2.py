# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sentiment.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='sentiment.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0fsentiment.proto\" \n\x10SentimentRequest\x12\x0c\n\x04text\x18\x01 \x01(\t\"?\n\x11SentimentResponse\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x1c\n\tsentences\x18\x02 \x03(\x0b\x32\t.Sentence\"K\n\x08Sentence\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x15\n\rtokenizedText\x18\x02 \x01(\t\x12\x1a\n\x08opinions\x18\x03 \x03(\x0b\x32\x08.Opinion\"Y\n\x07Opinion\x12\x0e\n\x06target\x18\x01 \x01(\t\x12\x10\n\x08\x63\x61tegory\x18\x02 \x01(\t\x12\x10\n\x08polarity\x18\x03 \x01(\t\x12\r\n\x05start\x18\x04 \x01(\x05\x12\x0b\n\x03\x65nd\x18\x05 \x01(\x05\x32I\n\x10SentimentService\x12\x35\n\ngetAspects\x12\x11.SentimentRequest\x1a\x12.SentimentResponse\"\x00\x62\x06proto3')
)




_SENTIMENTREQUEST = _descriptor.Descriptor(
  name='SentimentRequest',
  full_name='SentimentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='SentimentRequest.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19,
  serialized_end=51,
)


_SENTIMENTRESPONSE = _descriptor.Descriptor(
  name='SentimentResponse',
  full_name='SentimentResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='SentimentResponse.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sentences', full_name='SentimentResponse.sentences', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=53,
  serialized_end=116,
)


_SENTENCE = _descriptor.Descriptor(
  name='Sentence',
  full_name='Sentence',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='Sentence.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tokenizedText', full_name='Sentence.tokenizedText', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='opinions', full_name='Sentence.opinions', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=118,
  serialized_end=193,
)


_OPINION = _descriptor.Descriptor(
  name='Opinion',
  full_name='Opinion',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='Opinion.target', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='category', full_name='Opinion.category', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='polarity', full_name='Opinion.polarity', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start', full_name='Opinion.start', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end', full_name='Opinion.end', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=195,
  serialized_end=284,
)

_SENTIMENTRESPONSE.fields_by_name['sentences'].message_type = _SENTENCE
_SENTENCE.fields_by_name['opinions'].message_type = _OPINION
DESCRIPTOR.message_types_by_name['SentimentRequest'] = _SENTIMENTREQUEST
DESCRIPTOR.message_types_by_name['SentimentResponse'] = _SENTIMENTRESPONSE
DESCRIPTOR.message_types_by_name['Sentence'] = _SENTENCE
DESCRIPTOR.message_types_by_name['Opinion'] = _OPINION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SentimentRequest = _reflection.GeneratedProtocolMessageType('SentimentRequest', (_message.Message,), dict(
  DESCRIPTOR = _SENTIMENTREQUEST,
  __module__ = 'sentiment_pb2'
  # @@protoc_insertion_point(class_scope:SentimentRequest)
  ))
_sym_db.RegisterMessage(SentimentRequest)

SentimentResponse = _reflection.GeneratedProtocolMessageType('SentimentResponse', (_message.Message,), dict(
  DESCRIPTOR = _SENTIMENTRESPONSE,
  __module__ = 'sentiment_pb2'
  # @@protoc_insertion_point(class_scope:SentimentResponse)
  ))
_sym_db.RegisterMessage(SentimentResponse)

Sentence = _reflection.GeneratedProtocolMessageType('Sentence', (_message.Message,), dict(
  DESCRIPTOR = _SENTENCE,
  __module__ = 'sentiment_pb2'
  # @@protoc_insertion_point(class_scope:Sentence)
  ))
_sym_db.RegisterMessage(Sentence)

Opinion = _reflection.GeneratedProtocolMessageType('Opinion', (_message.Message,), dict(
  DESCRIPTOR = _OPINION,
  __module__ = 'sentiment_pb2'
  # @@protoc_insertion_point(class_scope:Opinion)
  ))
_sym_db.RegisterMessage(Opinion)



_SENTIMENTSERVICE = _descriptor.ServiceDescriptor(
  name='SentimentService',
  full_name='SentimentService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=286,
  serialized_end=359,
  methods=[
  _descriptor.MethodDescriptor(
    name='getAspects',
    full_name='SentimentService.getAspects',
    index=0,
    containing_service=None,
    input_type=_SENTIMENTREQUEST,
    output_type=_SENTIMENTRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SENTIMENTSERVICE)

DESCRIPTOR.services_by_name['SentimentService'] = _SENTIMENTSERVICE

# @@protoc_insertion_point(module_scope)
